<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oracle.mapper.TbProjectfileMapper">
  <resultMap id="BaseResultMap" type="com.oracle.po.TbProjectfile">
    <id column="ProjectFileID" jdbcType="INTEGER" property="projectfileid" />
    <result column="EmpID" jdbcType="INTEGER" property="empid" />
    <result column="projectid" jdbcType="INTEGER" property="projectid" />
    <result column="CreateDate" jdbcType="DATE" property="createdate" />
    <result column="fileSize" jdbcType="INTEGER" property="filesize" />
    <result column="FileName" jdbcType="VARCHAR" property="filename" />
    <result column="fileType" jdbcType="VARCHAR" property="filetype" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.oracle.po.TbProjectfile">
    <result column="fileContent" jdbcType="LONGVARBINARY" property="filecontent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ProjectFileID, EmpID, projectid, CreateDate, fileSize, FileName, fileType
  </sql>
  <sql id="Blob_Column_List">
    fileContent
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.oracle.po.TbProjectfileExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_projectfile
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.oracle.po.TbProjectfileExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_projectfile
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_projectfile
    where ProjectFileID = #{projectfileid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_projectfile
    where ProjectFileID = #{projectfileid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.oracle.po.TbProjectfileExample">
    delete from tb_projectfile
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.oracle.po.TbProjectfile">
    insert into tb_projectfile (ProjectFileID, EmpID, projectid, 
      CreateDate, fileSize, FileName, 
      fileType, fileContent)
    values (#{projectfileid,jdbcType=INTEGER}, #{empid,jdbcType=INTEGER}, #{projectid,jdbcType=INTEGER}, 
      #{createdate,jdbcType=DATE}, #{filesize,jdbcType=INTEGER}, #{filename,jdbcType=VARCHAR}, 
      #{filetype,jdbcType=VARCHAR}, #{filecontent,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.oracle.po.TbProjectfile">
    insert into tb_projectfile
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectfileid != null">
        ProjectFileID,
      </if>
      <if test="empid != null">
        EmpID,
      </if>
      <if test="projectid != null">
        projectid,
      </if>
      <if test="createdate != null">
        CreateDate,
      </if>
      <if test="filesize != null">
        fileSize,
      </if>
      <if test="filename != null">
        FileName,
      </if>
      <if test="filetype != null">
        fileType,
      </if>
      <if test="filecontent != null">
        fileContent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectfileid != null">
        #{projectfileid,jdbcType=INTEGER},
      </if>
      <if test="empid != null">
        #{empid,jdbcType=INTEGER},
      </if>
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=DATE},
      </if>
      <if test="filesize != null">
        #{filesize,jdbcType=INTEGER},
      </if>
      <if test="filename != null">
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="filetype != null">
        #{filetype,jdbcType=VARCHAR},
      </if>
      <if test="filecontent != null">
        #{filecontent,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.oracle.po.TbProjectfileExample" resultType="java.lang.Long">
    select count(*) from tb_projectfile
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_projectfile
    <set>
      <if test="record.projectfileid != null">
        ProjectFileID = #{record.projectfileid,jdbcType=INTEGER},
      </if>
      <if test="record.empid != null">
        EmpID = #{record.empid,jdbcType=INTEGER},
      </if>
      <if test="record.projectid != null">
        projectid = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.createdate != null">
        CreateDate = #{record.createdate,jdbcType=DATE},
      </if>
      <if test="record.filesize != null">
        fileSize = #{record.filesize,jdbcType=INTEGER},
      </if>
      <if test="record.filename != null">
        FileName = #{record.filename,jdbcType=VARCHAR},
      </if>
      <if test="record.filetype != null">
        fileType = #{record.filetype,jdbcType=VARCHAR},
      </if>
      <if test="record.filecontent != null">
        fileContent = #{record.filecontent,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update tb_projectfile
    set ProjectFileID = #{record.projectfileid,jdbcType=INTEGER},
      EmpID = #{record.empid,jdbcType=INTEGER},
      projectid = #{record.projectid,jdbcType=INTEGER},
      CreateDate = #{record.createdate,jdbcType=DATE},
      fileSize = #{record.filesize,jdbcType=INTEGER},
      FileName = #{record.filename,jdbcType=VARCHAR},
      fileType = #{record.filetype,jdbcType=VARCHAR},
      fileContent = #{record.filecontent,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_projectfile
    set ProjectFileID = #{record.projectfileid,jdbcType=INTEGER},
      EmpID = #{record.empid,jdbcType=INTEGER},
      projectid = #{record.projectid,jdbcType=INTEGER},
      CreateDate = #{record.createdate,jdbcType=DATE},
      fileSize = #{record.filesize,jdbcType=INTEGER},
      FileName = #{record.filename,jdbcType=VARCHAR},
      fileType = #{record.filetype,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.oracle.po.TbProjectfile">
    update tb_projectfile
    <set>
      <if test="empid != null">
        EmpID = #{empid,jdbcType=INTEGER},
      </if>
      <if test="projectid != null">
        projectid = #{projectid,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        CreateDate = #{createdate,jdbcType=DATE},
      </if>
      <if test="filesize != null">
        fileSize = #{filesize,jdbcType=INTEGER},
      </if>
      <if test="filename != null">
        FileName = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="filetype != null">
        fileType = #{filetype,jdbcType=VARCHAR},
      </if>
      <if test="filecontent != null">
        fileContent = #{filecontent,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where ProjectFileID = #{projectfileid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.oracle.po.TbProjectfile">
    update tb_projectfile
    set EmpID = #{empid,jdbcType=INTEGER},
      projectid = #{projectid,jdbcType=INTEGER},
      CreateDate = #{createdate,jdbcType=DATE},
      fileSize = #{filesize,jdbcType=INTEGER},
      FileName = #{filename,jdbcType=VARCHAR},
      fileType = #{filetype,jdbcType=VARCHAR},
      fileContent = #{filecontent,jdbcType=LONGVARBINARY}
    where ProjectFileID = #{projectfileid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oracle.po.TbProjectfile">
    update tb_projectfile
    set EmpID = #{empid,jdbcType=INTEGER},
      projectid = #{projectid,jdbcType=INTEGER},
      CreateDate = #{createdate,jdbcType=DATE},
      fileSize = #{filesize,jdbcType=INTEGER},
      FileName = #{filename,jdbcType=VARCHAR},
      fileType = #{filetype,jdbcType=VARCHAR}
    where ProjectFileID = #{projectfileid,jdbcType=INTEGER}
  </update>
</mapper>